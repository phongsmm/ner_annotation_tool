{"version":3,"sources":["logo.svg","Databoard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Databoard","props","handleOpen","setState","portalopen","pick","begin","end","text","state","seltag","error","status","msg","reload","handle","bind","textareahandle","Updatebg","checktext","tag_select","doPut","confirm","handleClose","setInterval","document","getElementById","style","display","oldProps","nextProps","nextState","this","prop","posts","event","txt","target","value","i","window","location","data","have","mentions","map","mention","push","base_location","length","checkmark","axios","put","Url_settype","id","Rest","Url_update","delete","Url_unset","e","console","log","start","selection","getSelection","range","getRangeAt","startOffset","endOffset","toString","html","cut","lo_begin","lo_end","sort","a","b","m","key","className","type","slice","pageNumber","indexOfLastPost","currentpage","postperpage","indexOfFirstPost","currentpost","Math","ceil","Tags","Card","Group","itemsPerRow","stackable","width","right","height","position","fontSize","marginButtom","overflow","maxHeight","minHeight","Content","Description","TransitionablePortal","onOpen","onClose","openOnTriggerClick","trigger","Button","top","content","negative","positive","Segment","left","zIndex","Header","Grid","columns","divided","marginRight","marginLeft","Row","onMouseUp","color","marginTop","Column","Input","placeholder","disabled","Dropdown","fluid","search","options","MarginTop","onChange","onClick","doPost","doDelete","Pagination","ellipsisItem","activePage","totalPages","onPageChange","Changepage","React","Component","App","datatotal","textarea","input","success","cuttext","tags","Url_get","Url_add","Url_list","Url_delete","doCut","handletextarea","handleInput","handlecutarea","get","res","list","Person","Location","Organization","JobTitle","Facility","GeographicFeature","Product","Date","Time","Duration","Measure","Money","Ordinal","Number","Percent","Address","PhoneNumber","EmailAddress","URL","IPAddress","Hashtag","TwitterHandle","page","isInteger","parseInt","post","Alert","arr","message","GridColumn","GridRow","Menu","size","alt","src","logo","Item","name","active","backgroundColor","Form","TextArea","label","basic","labelPosition","open","centered","Label","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.62cc516f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport './App.css';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport axios from 'axios';\r\nimport { Pagination ,TransitionablePortal, Button, Segment, Header,Input,Dropdown,Grid,Card} from 'semantic-ui-react'\r\n\r\n\r\nclass Databoard extends React.Component {\r\n\r\n    \r\n\r\n        constructor(props) {\r\n            super(props);\r\n            \r\n            this.state = {\r\n                pick:{\r\n                    \"begin\":0,\r\n                    \"end\":0\r\n                },\r\n                portalopen:false,\r\n                text:\"ข้อความ\",\r\n                seltag:\"Location\",\r\n                error:{\r\n                    status:false,\r\n                    msg:\"\"\r\n                },\r\n                reload:false\r\n\r\n            }\r\n        \r\n\r\n            this.handle = this.handle.bind(this);\r\n            this.textareahandle = this.textareahandle.bind(this);\r\n            this.Updatebg = this.Updatebg.bind(this);\r\n            this.checktext = this.checktext.bind(this);\r\n            this.tag_select = this.tag_select.bind(this);\r\n            this.doPut = this.doPut.bind(this);\r\n            this.confirm = this.confirm.bind(this);\r\n            this.handleClose = this.handleClose.bind(this);\r\n\r\n\r\n         \r\n        }\r\n        \r\n\r\n        \r\n\r\n\r\n\r\n        componentDidMount() {\r\n\r\n            setInterval(() => {\r\n                if(document.getElementById('checkmark')!=null){\r\n                    var x = document.getElementById('checkmark')\r\n                    x.style.display = 'none'\r\n                }\r\n               \r\n                this.setState({error:{msg:\"\"}})\r\n                \r\n              }, 4000);\r\n\r\n\r\n        }\r\n\r\n\r\n        componenWillUnmount() {\r\n\r\n        }\r\n\r\n        componentDidUpdate(oldProps){\r\n\r\n        }\r\n        \r\n        shouldComponentUpdate(nextProps, nextState){\r\n            const { prop } = this.props\r\n            if (prop !== nextProps.posts) {\r\n              return true\r\n            }\r\n            return false\r\n        }\r\n\r\n\r\n        handle(event) {\r\n\r\n            this.props.setState({\r\n                txt: event.target.value\r\n            });\r\n\r\n        }\r\n\r\n        confirm(i){\r\n            this.setState({error:{status:false,msg:\"\"}})\r\n            if(i===0){}\r\n            if(i===1){}\r\n\r\n        }\r\n\r\n        reload(){window.location.reload()}\r\n\r\n        handleOpen = () => this.setState({ portalopen: true ,pick:{begin:0,end:0},text:\"ข้อความ\" })\r\n\r\n        handleClose(){  this.setState({ portalopen: false }) \r\n                        if(this.state.reload){this.reload()} }\r\n                        \r\n\r\n    \r\n       \r\n\r\n\r\n        doPut(data){\r\n            var error = 0\r\n            var location = []\r\n            var have = false\r\n\r\n            if((this.state.pick.begin===0&&this.state.pick.end===0 )|| this.state.pick.begin===this.state.pick.end){\r\n                error+=1\r\n                this.setState({error:{status:true,msg:\"Please Select Text\"}});\r\n            }\r\n\r\n           \r\n\r\n            data.mentions.map(mention=>{\r\n\r\n                location.push(`${mention.location.begin},${mention.location.end}`)\r\n    \r\n\r\n                   return[]\r\n                })\r\n                var base_location = `${this.state.pick.begin},${this.state.pick.end}`\r\n\r\n               for(var i = 0 ; i<=location.length;i++){\r\n                   if(location[i]===base_location){\r\n                       have = true\r\n                   }\r\n               }\r\n\r\n\r\n    \r\n\r\n                if(error===0&&have===true){\r\n                    this.checkmark()\r\n                    axios.put(`${this.props.Url_settype}${data.id}/${this.state.pick.begin}/${this.state.pick.end}/${this.state.seltag}`)\r\n                    this.setState({reload:true})\r\n                    \r\n\r\n                }\r\n                else{\r\n                    this.setState({error:{status:true,msg:\"Tags Not Found\"}});\r\n                }\r\n\r\n    \r\n            \r\n        \r\n        }\r\n\r\n        doPost(data){\r\n            var error = 0\r\n\r\n            if((this.state.pick.begin===0&&this.state.pick.end===0 )|| this.state.pick.begin===this.state.pick.end){\r\n                error+=1\r\n                this.setState({error:{status:true,msg:\"Please Select Text\"}});\r\n            }\r\n\r\n           \r\n\r\n            data.mentions.map(mention=>{\r\n                \r\n                if(mention.location.begin === this.state.pick.begin && mention.location.end === this.state.pick.end)\r\n                    {   error+=1\r\n                        this.setState({error:{status:true,msg:\"This Tag already exists!\"}});\r\n                    }\r\n                    return[]\r\n                })\r\n\r\n                if(error===0){\r\n\r\n                    var Rest = data\r\n                    Rest.mentions.push( {\r\n                        \"location\": {\r\n                          \"begin\": this.state.pick.begin,\r\n                          \"end\": this.state.pick.end\r\n                        },\r\n                        \"text\": this.state.text,\r\n                        \"type\": this.state.seltag,\r\n                      });\r\n    \r\n                    axios.put(`${this.props.Url_update}${data.id}`,Rest)\r\n                    this.checkmark()\r\n\r\n\r\n                }\r\n\r\n    \r\n            \r\n        \r\n        }\r\n\r\n        doDelete(data){\r\n            var error = 0\r\n            var location = []\r\n            var have = false\r\n\r\n            if((this.state.pick.begin===0&&this.state.pick.end===0 )|| this.state.pick.begin===this.state.pick.end){\r\n                error+=1\r\n                this.setState({error:{status:true,msg:\"Please Select Text\"}});\r\n            }\r\n\r\n           \r\n\r\n            data.mentions.map(mention=>{\r\n\r\n                location.push(`${mention.location.begin},${mention.location.end}`)\r\n    \r\n\r\n                   return[]\r\n                })\r\n                var base_location = `${this.state.pick.begin},${this.state.pick.end}`\r\n\r\n               for(var i = 0 ; i<=location.length;i++){\r\n                   if(location[i]===base_location){\r\n                       have = true\r\n                   }\r\n               }\r\n\r\n\r\n\r\n\r\n                if(error===0&&have===true){\r\n                    this.checkmark()\r\n            \r\n\r\n                    \r\n                    axios.delete(`${this.props.Url_unset}${data.id}/${this.state.pick.begin}/${this.state.pick.end}`)\r\n                    this.setState({reload:true})\r\n\r\n                }\r\n                else{\r\n                    this.setState({error:{status:true,msg:\"Tags Not Found\"}});\r\n                }\r\n\r\n    \r\n\r\n        }\r\n\r\n        \r\n        checkmark(){\r\n\r\n            try{\r\n                var x = document.getElementById('checkmark')\r\n                    x.style.display = 'block'\r\n            }catch(e){console.log(e)}\r\n\r\n        }\r\n\r\n\r\n        textareahandle(){\r\n\r\n                var start = 0\r\n                var end = 0\r\n                var selection = window.getSelection()\r\n                var range = selection.getRangeAt(0)\r\n            \r\n            \r\n                console.log(range.startOffset,range.endOffset,selection.toString())\r\n                start = range.startOffset\r\n                end =  range.endOffset\r\n\r\n                this.setState({\"pick\":{begin:start,end:end},text:selection.toString()})\r\n\r\n            \r\n        }\r\n    \r\n\r\n        tag_select(data){\r\n            this.setState({seltag:data.value})\r\n        }\r\n        checktext(){\r\n            if(this.state.text===\"\"){\r\n                return \"\"\r\n            }\r\n            return this.state.text\r\n        }\r\n        \r\n\r\n\r\n\r\n\r\n         Updatebg(data){\r\n\r\n            var text = data.text;\r\n            var html = [];\r\n            var cut = [];\r\n            var lo_begin = [];\r\n            var lo_end = [];\r\n\r\n                var m = data.mentions.sort((a,b)=>{return a.location.begin - b.location.begin})\r\n                m.map((m,i)=>{\r\n                cut.push(<span key={\"child : \"+i} className={m.type}>{text.slice(m.location.begin,m.location.end)}</span>)\r\n                lo_begin.push(m.location.begin)\r\n                lo_end.push(m.location.end)\r\n                return[]\r\n            })\r\n            \r\n\r\n            for(var i = 0;i<=cut.length;i++){\r\n                if(i===0){\r\n                html.push(<span key={\"normal :\"+i}>{text.slice(0,lo_begin[i])}</span>)\r\n                    html.push(cut[i])\r\n                }\r\n                else{\r\n                    html.push(<span key={\"normal :\"+i}>{text.slice(lo_end[i-1],lo_begin[i])}</span>)\r\n                    html.push(cut[i])\r\n                }\r\n            }\r\n\r\n            return html\r\n\r\n            \r\n\r\n        }\r\n\r\n\r\n\r\n        render() {\r\n\r\n        //Slice Page Number\r\n\r\n            const pageNumber = [],\r\n                indexOfLastPost = this.props.currentpage * this.props.postperpage ,\r\n                indexOfFirstPost = indexOfLastPost - this.props.postperpage,\r\n                currentpost = this.props.posts.slice(indexOfFirstPost,indexOfLastPost);\r\n        \r\n            for(let i =1 ;i<=Math.ceil(this.props.posts.length/this.props.postperpage);i++)\r\n            {pageNumber.push(i);}\r\n\r\n            const { portalopen } = this.state.portalopen\r\n\r\n            const Tags = \r\n            [\r\n                { key: 'A', value: 'Address', text: 'Address' },\r\n                { key: 'Da', value: 'Date', text: 'Date' },\r\n                { key: 'Du', value: 'Duration', text: 'Duration' },\r\n                { key: 'E', value: 'EmailAddress', text: 'EmailAddress' },\r\n                { key: 'F', value: 'Facility', text: 'Facility' },\r\n                { key: 'G', value: 'GeographicFeature', text: 'GeographicFeature' },\r\n                { key: 'H', value: 'Hashtag', text: 'Hashtag' },\r\n                { key: 'J', value: 'JobTitle', text: 'JobTitle' },\r\n                { key: 'L', value: 'Location', text: 'Location' },\r\n                { key: 'I', value: 'IPAddress', text: 'IPAddress' },\r\n                { key: 'Me', value: 'Measure', text: 'Measure' },\r\n                { key: 'Mo', value: 'Money', text: 'Money' },\r\n                { key: 'N', value: 'Number', text: 'Number' },\r\n                { key: 'Ord', value: 'Ordinal', text: 'Ordinal' },\r\n                { key: 'Org', value: 'Organization', text: 'Organization' },\r\n                { key: 'Pers', value: 'Person', text: 'Person' },\r\n                { key: 'Perc', value: 'Percent', text: 'Percent' },\r\n                { key: 'Pro', value: 'Product', text: 'Product' },\r\n                { key: 'Pho', value: 'PhoneNumber', text: 'PhoneNumber' },\r\n                { key: 'Tw', value: 'TwitterHandle', text: 'TwitterHandle' },\r\n                { key: 'Ti', value: 'Time', text: 'Time' },\r\n                { key: 'URL', value: 'URL', text: 'URL' },\r\n                \r\n               \r\n              ]\r\n        // Get Data Total\r\n       \r\n\r\n\r\n                return (  \r\n                <div className=\"Dashboard\"> \r\n                <Card.Group itemsPerRow={1} stackable style={{width:\"30%\",right:\"-39%\",height:\"800px\",position:\"relative\",fontSize:\"20px\",marginButtom:\"20px\"}}>\r\n                { currentpost.map((data ,i) => { \r\n                      return [\r\n         \r\n            \r\n                    <div  key={\"x\" + data.id}>\r\n\r\n\r\n    <Card \r\n\t style={{overflow: 'auto', maxHeight: 300,minHeight:150}}>\r\n      <Card.Content >\r\n        <Card.Description >\r\n        <p>{this.Updatebg(data)}</p>\r\n        </Card.Description>\r\n      </Card.Content>\r\n    </Card>\r\n\r\n    \r\n\r\n \r\n\r\n\r\n            \r\n                     <TransitionablePortal\r\n                    onOpen={this.handleOpen}\r\n                    onClose={this.handleClose}\r\n                    openOnTriggerClick\r\n                    trigger={\r\n\r\n                    <Button\r\n                    style={{position:\"relative\",right:\"-170px\",top:\"-60px\"}}\r\n                    key={\"b\"+data.id}\r\n                    content={portalopen ? 'EDIT' : 'EDIT'}\r\n                    negative={portalopen}\r\n                    positive={!portalopen}\r\n                    />\r\n\r\n                    }>\r\n                        \r\n                    <Segment\r\n                    style={{ left: '30%', position: 'fixed', top: '20%', zIndex: 1000 ,width:'40%',minHeight:'230px'}}\r\n                    >\r\n                    <Header>ข้อความรหัสที่ {data.id}</Header>\r\n                    <Grid columns={2} divided style={{marginRight:'5px',marginLeft:'5px'}}>\r\n                    <Grid.Row>\r\n                        <Segment style={{width:\"90%\"}}>  <p onMouseUp={this.textareahandle}>{data.text}</p>   </Segment>\r\n                        <i id=\"checkmark\" className=\"check circle outline icon\" style={{color:'green',fontSize:'150%',marginTop:'3%',marginLeft:'2%',display:'none'}}></i>\r\n                    <p style={{color:'red',marginLeft:'5%'}}>{this.state.error.msg}</p>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                   <Grid.Column>\r\n                <Input placeholder='ข้อความ' value={this.state.text} style={{width:\"100%\"}}  />\r\n                 \r\n                   </Grid.Column>\r\n                   \r\n                   <Grid.Column>\r\n                      <Button disabled={true} >{this.state.pick.begin}</Button>\r\n                    <Button disabled={true} >{this.state.pick.end}</Button>\r\n                   \r\n                </Grid.Column>\r\n                    </Grid.Row>\r\n                  \r\n                    <Grid.Row> <Dropdown placeholder='State' fluid search selection options={Tags} style={{MarginTop:'10%'}} onChange={(e,data)=>this.tag_select(data)}/></Grid.Row>\r\n                    <Grid.Row>\r\n                    \r\n                     <Button className =\"ui primary button\" onClick={()=>this.doPost(data)} > POST</Button> \r\n                    <Button className =\"ui yellow button\"  onClick={()=>this.doPut(data)}> PUT</Button>\r\n                    <Button className =\"ui red button\" onClick={()=>this.doDelete(data)}> DELETE</Button>\r\n                    </Grid.Row>\r\n                    \r\n                    </Grid>\r\n                    </Segment>\r\n                    </TransitionablePortal>\r\n\r\n                 \r\n                \r\n                    \r\n                    \r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                   \r\n                   \r\n                    ]})}\r\n\r\n\r\n                    <Pagination ellipsisItem={null} activePage={this.props.currentpage} totalPages={pageNumber.length} onPageChange={this.props.Changepage}/>\r\n                    </Card.Group>\r\n                    \r\n                        \r\n\r\n                   \r\n                \r\n            \r\n           \r\n        \r\n                    </div>\r\n                                    )}}\r\n\r\nexport default Databoard;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport Databoard from'./Databoard';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { Label ,Grid,Menu,TransitionablePortal,Button,Segment,Header,TextArea,Form,Input,GridColumn,GridRow} from 'semantic-ui-react'\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n\r\n    super(props);\r\n    this.state = {\r\n      txt: \"\",\r\n      posts: [],\r\n      currentpage: 1,\r\n      postperpage: 5,\r\n      datatotal:0,\r\n      portalopen:false,\r\n      reload:false,\r\n      textarea:\"\",\r\n      input:0,\r\n      success:\"\",\r\n      error:{status:false,msg:\"\"},\r\n      cuttext:\"\",\r\n      tags : {\r\n\r\n        \"Person\":0,\r\n        \"Location\":0,\r\n        \"Organization\":0,\r\n        \"JobTitle\":0,\r\n        \"Facility\":0,\r\n        \"GeographicFeature\":0,\r\n        \"Product\":0,\r\n        \"Date\":0,\r\n        \"Time\":0,\r\n        \"Duration\":0,\r\n        \"Measure\":0,\r\n        \"Money\":0,\r\n        \"Ordinal\":0,\r\n        \"Number\":0,\r\n        \"Percent\":0,\r\n        \"Address\":0,\r\n        \"PhoneNumber\":0,\r\n        \"EmailAddress\":0,\r\n        \"URL\":0,\r\n        \"IPAddress\":0,\r\n        \"Hashtag\":0,\r\n        \"TwitterHandle\":0,\r\n\r\n      },\r\n      Url_get:\"https://fastapi-nlp.herokuapp.com/get/\",\r\n      Url_add:\"https://fastapi-nlp.herokuapp.com/add/\",\r\n      Url_list:\"https://fastapi-nlp.herokuapp.com/list/\",\r\n      Url_update:\"https://fastapi-nlp.herokuapp.com/update/\",\r\n      Url_unset:\"https://fastapi-nlp.herokuapp.com/unset/\",\r\n      Url_delete:\"https://fastapi-nlp.herokuapp.com/delete/\",\r\n      Url_settype:\"https://fastapi-nlp.herokuapp.com/settype/\",\r\n\r\n\r\n      \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  };\r\n    this.Changepage = this.Changepage.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.doPost = this.doPost.bind(this);\r\n    this.doDelete = this.doDelete.bind(this);\r\n    this.doCut = this.doCut.bind(this);\r\n    this.handletextarea = this.handletextarea.bind(this);\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.handlecutarea = this.handlecutarea.bind(this);\r\n    \r\n    \r\n   \r\n  }\r\n\r\n\r\n\r\n  \r\n    async componentDidMount() {\r\n\r\n   const res = await axios.get(this.state.Url_get);\r\n    this.setState({posts:res.data})\r\n    const list = await axios.get(this.state.Url_list);\r\n    this.setState({tags:{\"Person\":list.data.Person , \"Location\":list.data.Location,\"Organization\":list.data.Organization,\r\n    \"JobTitle\":list.data.JobTitle,\"Facility\":list.data.Facility,\"GeographicFeature\":list.data.GeographicFeature,\"Product\":list.data.Product,\r\n    \"Date\":list.data.Date,\"Time\":list.data.Time,\"Duration\":list.data.Duration,\"Measure\":list.data.Measure,\"Money\":list.data.Money,\"Ordinal\":list.data.Ordinal,\r\n    \"Number\":list.data.Number,\"Percent\":list.data.Percent,\"Address\":list.data.Address,\"PhoneNumber\":list.data.PhoneNumber,\"EmailAddress\":list.data.EmailAddress,\r\n  \"URL\":list.data.URL,\"IPAddress\":list.data.IPAddress,\"Hashtag\":list.data.Hashtag,\"TwitterHandle\":list.data.TwitterHandle}})\r\n\r\n\r\n\r\n  setInterval(() => {\r\n    this.setState({error:{msg:\"\"},success:\"\"})\r\n    \r\n  }, 4000);\r\n\r\n\r\n    \r\n\r\n    \r\n     \r\n}\r\n\r\n\r\ncomponenWillUnmount() {\r\n}\r\n\r\n\r\nChangepage(e,page){\r\n\r\n  this.setState({currentpage:page.activePage});\r\n\r\n}\r\n\r\n   async doPost( ){\r\n\r\n    if(this.state.textarea.length<2){\r\n      this.setState({error:{status:true,msg:\"Please Input a Sentence\"}})\r\n    }\r\n    else if(this.state.input.length<1||!Number.isInteger(parseInt(this.state.input))){\r\n      this.setState({error:{status:true,msg:\"Please Input a ID\"}})\r\n    }\r\n    else{\r\n      try {\r\n        var res = await axios.post(`${this.state.Url_add}`,{\"id\":this.state.input,\"text\":this.state.textarea ,\"mentions\":[]})\r\n      }\r\n      catch(e){\r\n        console.log(e)\r\n      }\r\n     \r\n      if(res.data.Alert === \"ID Exists\"){ this.setState({error:{status:true,msg:\"ID already exists\"}})}\r\n\r\n      else{\r\n        this.setState({success:`Success insert ID: ${this.state.input}`,reload:true})\r\n\r\n      }\r\n\r\n\r\n    }\r\n  \r\n\r\n  \r\n    \r\n  }\r\n  async doDelete(){\r\n\r\n \r\n    if(this.state.input.length<1||!Number.isInteger(parseInt(this.state.input))){\r\n      this.setState({error:{status:true,msg:\"Please Input a ID\"}})\r\n    }\r\n    else{\r\n      try {\r\n        var res = await axios.delete(`${this.state.Url_delete}${this.state.input}`)\r\n      }\r\n      catch(e){\r\n        console.log(e)\r\n      }\r\n     \r\n      if(res.data.Alert === \"ID NOT FOUND!\"){ this.setState({error:{status:true,msg:\"ID NOT FOUND!\"}})}\r\n\r\n      else{\r\n        this.setState({success:`Success remove ID: ${this.state.input}`,reload:true})\r\n\r\n      }\r\n\r\n\r\n    }\r\n  \r\n\r\n  }\r\n\r\n  async doCut(){\r\n        var res = await axios.get(`https://fastapi-nlp.herokuapp.com/cut/${this.state.cuttext}`)\r\n        try{\r\n          var arr = res.data.message\r\n          var msg = \"\"\r\n          for(var i =0 ; i<=arr.length-1;i++) {msg += \" \"+arr[i] } \r\n          this.setState({cuttext:msg})\r\n        }catch(e){console.log(e)}\r\n        \r\n\r\n  }\r\n\r\n\r\nreload(){window.location.reload()}\r\n\r\nhandleOpen = () => this.setState({ portalopen: true })\r\n\r\nhandleClose(){  this.setState({ portalopen: false }) \r\n                if(this.state.reload){this.reload()} }\r\n\r\nhandletextarea(e,data){\r\n  this.setState({textarea:data.value})\r\n}\r\nhandleInput (e,data){\r\n  this.setState({input:data.value})\r\n}\r\n\r\nhandlecutarea(e,data){\r\n  this.setState({cuttext:data.value})\r\n}\r\n\r\n\r\n  render(){\r\n  return (\r\n    <div className=\"App \" >\r\n\r\n<Grid>\r\n<GridColumn>\r\n<GridRow>\r\n<Menu size='small'>\r\n<img alt=\"\" src={logo} className=\"App-logo\" style={{width:\"50px\",height:\"40px\",position:\"relative\"}}></img>\r\n        <Menu.Item\r\n          name='Ner-Annotation tool'\r\n          active={false}\r\n          onClick={()=>{}}\r\n        />\r\n\r\n        \r\n        <Menu.Item\r\n       name='Total : '\r\n       active={false}\r\n       onClick={()=>{}}\r\n     />\r\n        \r\n        <Menu.Item\r\n          name= {`[ ${this.state.posts.length} ]`}\r\n          active={false}\r\n          onClick={()=>{}}\r\n        />\r\n\r\n     \r\n      <TransitionablePortal\r\n                    onOpen={this.handleOpen}\r\n                    onClose={this.handleClose}\r\n                    openOnTriggerClick\r\n                    trigger={\r\n                      <Menu.Item\r\n                      style={{backgroundColor:\"#b8de6f\",color:\"white\"}}\r\n                      name= \"MANAGE\"\r\n                      active={false}\r\n                      onClick={()=>{}}\r\n                    />\r\n\r\n                    }>\r\n                        \r\n                    <Segment\r\n                    style={{ left: '30%', position: 'fixed', top: '20%', zIndex: 1000 ,width:'40%',minHeight:'250px'}}\r\n                    >\r\n                    <Header>NER MANAGE</Header>\r\n                   <Grid>\r\n                     <Grid.Column>\r\n                       <Grid.Row>\r\n                         <Form>\r\n      <TextArea placeholder='ข้อความ' style={{ maxHeight: 250 }}  onChange = {this.handletextarea}/>\r\n                        </Form>\r\n                        <p style={{color:\"red\"}}> {this.state.error.msg } </p>\r\n                        <p style={{color:\"green\"}}> {this.state.success}</p>\r\n                       </Grid.Row>\r\n\r\n                       <Grid.Row style={{marginTop:\"5px\"}}>\r\n                       <Input\r\n                          label={{ basic: true, content: 'ID' }}\r\n                          labelPosition='right'\r\n                          placeholder='Enter ID'\r\n                          onChange = {this.handleInput}\r\n                          /> \r\n                        \r\n                       </Grid.Row>\r\n\r\n                       <Grid.Row style={{marginTop:\"5px\"}}>\r\n                        <Button positive onClick={this.doPost}>POST</Button> \r\n                        \r\n                   \r\n                        <Button negative onClick={this.doDelete}>Delete</Button>\r\n                        \r\n                    \r\n                 \r\n                       </Grid.Row>\r\n\r\n                 \r\n\r\n                     </Grid.Column>\r\n                   </Grid>\r\n                    \r\n           \r\n                    </Segment>\r\n                    </TransitionablePortal>\r\n\r\n\r\n                    <TransitionablePortal\r\n                    onOpen={this.handleOpen}\r\n                    onClose={this.handleClose}\r\n                    openOnTriggerClick\r\n                    trigger={\r\n                      <Menu.Item\r\n                      style={{backgroundColor:\"#595b83\",color:\"white\"}}\r\n                      name= \"CUT\"\r\n                      active={false}\r\n                      onClick={()=>{}}\r\n                    />\r\n\r\n                    }>\r\n                        \r\n                    <Segment\r\n                    style={{ left: '30%', position: 'fixed', top: '20%', zIndex: 1000 ,width:'40%',minHeight:'250px'}}\r\n                    >\r\n                    <Header>CUT</Header>\r\n                   <Grid>\r\n                     <Grid.Column>\r\n                       <Grid.Row>\r\n                         <Form>\r\n                  <TextArea placeholder='ข้อความ' style={{ maxHeight: 250 }}  onChange = {this.handlecutarea} value={this.state.cuttext}/>\r\n                        </Form>\r\n                        <p style={{color:\"red\"}}> {this.state.error.msg } </p>\r\n                        <p style={{color:\"green\"}}> {this.state.success}</p>\r\n                       </Grid.Row>\r\n\r\n                       <Grid.Row style={{marginTop:\"5px\"}}>\r\n                     \r\n                        \r\n                       </Grid.Row>\r\n\r\n                       <Grid.Row style={{marginTop:\"5px\"}}>\r\n                        <Button positive onClick={this.doCut}>CUT</Button> \r\n                        \r\n                   \r\n                        \r\n                    \r\n                 \r\n                       </Grid.Row>\r\n\r\n                 \r\n\r\n                     </Grid.Column>\r\n                   </Grid>\r\n                    \r\n           \r\n                    </Segment>\r\n                    </TransitionablePortal>\r\n\r\n                    <Menu.Item\r\n                    style={{backgroundColor:\"#01c5c4\",color:\"white\"}}\r\n                      name= \"DATA\"\r\n                      active={false}\r\n                      onClick={()=>{window.open(\"https://fastapi-nlp.herokuapp.com/get/\", \"_blank\")}}\r\n                    />\r\n\r\n                   \r\n\r\n           \r\n      \r\n\r\n      </Menu>\r\n   \r\n\r\n     \r\n     <Grid style={{marginTop:\"2px\",marginLeft:\"2px\",marginRight:\"2px\"}} centered>\r\n       <Grid.Row>\r\n     <Label color='blue' className=\"Label\">Person : {this.state.tags.Person} </Label>\r\n     <Label color='blue'className=\"Label\">Location : {this.state.tags.Location} </Label>\r\n     <Label color='blue'className=\"Label\">Organization : {this.state.tags.Organization} </Label>\r\n     <Label color='blue'className=\"Label\">JobTitle : {this.state.tags.JobTitle} </Label>\r\n     <Label color='blue'className=\"Label\">Facility : {this.state.tags.Facility} </Label>\r\n     <Label color='blue'className=\"Label\">GeographicFeature : {this.state.tags.GeographicFeature} </Label>\r\n     <Label color='blue'className=\"Label\">Product : {this.state.tags.Product} </Label>\r\n     <Label color='blue'className=\"Label\">Date : {this.state.tags.Date} </Label>\r\n     <Label color='blue'className=\"Label\">Time : {this.state.tags.Time} </Label>\r\n     <Label color='blue'className=\"Label\">Duration : {this.state.tags.Duration} </Label>\r\n     <Label color='blue'className=\"Label\">Measure : {this.state.tags.Measure} </Label>\r\n     </Grid.Row>\r\n     <Grid.Row>\r\n     <Label color='blue'className=\"Label\">Money : {this.state.tags.Money} </Label>\r\n     <Label color='blue'className=\"Label\">Ordinal : {this.state.tags.Ordinal} </Label>\r\n     <Label color='blue'className=\"Label\">Number : {this.state.tags.Number} </Label>\r\n     <Label color='blue'className=\"Label\">Percent : {this.state.tags.Percent} </Label>\r\n     <Label color='blue'className=\"Label\">Address : {this.state.tags.Address} </Label>\r\n     <Label color='blue'className=\"Label\">PhoneNumber : {this.state.tags.PhoneNumber} </Label>\r\n     <Label color='blue'className=\"Label\">EmailAddress : {this.state.tags.EmailAddress} </Label>\r\n     <Label color='blue'className=\"Label\">URL : {this.state.tags.URL} </Label>\r\n     <Label color='blue'className=\"Label\">IPAddress : {this.state.tags.IPAddress} </Label>\r\n     <Label color='blue'className=\"Label\">Hashtag : {this.state.tags.Hashtag} </Label>\r\n     <Label color='blue'className=\"Label\">TwitterHandle : {this.state.tags.TwitterHandle} </Label>\r\n     </Grid.Row>\r\n    \r\n     </Grid>\r\n     </GridRow>\r\n\r\n\r\n     <GridRow>\r\n\r\n      <div style={{marginTop:\"20px\"}}>\r\n     <Databoard {...this.state} Changepage = {this.Changepage}/>\r\n     <div style={{marginButtom:\"30px\"}}></div>\r\n     </div>\r\n    \r\n     </GridRow>\r\n\r\n     \r\n     </GridColumn>\r\n     </Grid>\r\n\r\n  \r\n    </div>\r\n  )};\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}