{"version":3,"sources":["logo.svg","Databoard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Databoard","props","handleOpen","setState","portalopen","pick","begin","end","text","handleClose","state","seltag","error","status","msg","handle","bind","Updatestate","textareahandle","Updatebg","checktext","tag_select","doPost","confirm","setInterval","document","getElementById","style","display","oldProps","nextProps","nextState","this","prop","posts","event","txt","target","value","i","data","mentions","map","mention","location","console","log","lo","type","start","selection","window","getSelection","range","getRangeAt","startOffset","endOffset","toString","html","cut","lo_begin","lo_end","sort","a","b","m","push","key","className","slice","length","pageNumber","indexOfLastPost","currentpage","postperpage","indexOfFirstPost","currentpost","Math","ceil","Tags","id","TransitionablePortal","onOpen","onClose","openOnTriggerClick","trigger","Button","onClick","content","negative","positive","Segment","left","position","top","zIndex","width","height","Header","Grid","columns","divided","marginRight","marginLeft","Row","onMouseUp","color","fontSize","marginTop","Column","Input","placeholder","disabled","Dropdown","fluid","search","options","MarginTop","onChange","e","Pagination","ellipsisItem","activePage","totalPages","onPageChange","Changepage","React","Component","App","datatotal","tags","axios","get","res","list","Person","page","href","aria-hidden","Label","src","logo","alt","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c8da57a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport './App.css';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { Pagination ,TransitionablePortal, Button, Segment, Header,Input,Dropdown,Grid} from 'semantic-ui-react'\r\n\r\n\r\nclass Databoard extends React.Component {\r\n\r\n    \r\n\r\n        constructor(props) {\r\n            super(props);\r\n            \r\n            this.state = {\r\n                pick:{\r\n                    \"begin\":0,\r\n                    \"end\":0\r\n                },\r\n                portalopen:false,\r\n                text:\"ข้อความ\",\r\n                seltag:\"Location\",\r\n                error:{\r\n                    status:false,\r\n                    msg:\"\"\r\n                }\r\n\r\n            }\r\n        \r\n\r\n            this.handle = this.handle.bind(this);\r\n            this.Updatestate = this.Updatestate.bind(this);\r\n            this.textareahandle = this.textareahandle.bind(this);\r\n            this.Updatebg = this.Updatebg.bind(this);\r\n            this.checktext = this.checktext.bind(this);\r\n            this.tag_select = this.tag_select.bind(this);\r\n            this.doPost = this.doPost.bind(this);\r\n            this.confirm = this.confirm.bind(this);\r\n\r\n\r\n         \r\n        }\r\n        \r\n\r\n        \r\n\r\n\r\n\r\n        componentDidMount() {\r\n\r\n            setInterval(() => {\r\n                if(document.getElementById('checkmark')!=null){\r\n                    var x = document.getElementById('checkmark')\r\n                    x.style.display = 'none'\r\n                }\r\n               \r\n                this.setState({error:{msg:\"\"}})\r\n                \r\n              }, 4000);\r\n\r\n\r\n        }\r\n\r\n\r\n        componenWillUnmount() {\r\n\r\n        }\r\n\r\n        componentDidUpdate(oldProps){\r\n\r\n        }\r\n        \r\n        shouldComponentUpdate(nextProps, nextState){\r\n            const { prop } = this.props\r\n            if (prop !== nextProps.posts) {\r\n              return true\r\n            }\r\n            return false\r\n        }\r\n\r\n\r\n        handle(event) {\r\n\r\n            this.props.setState({\r\n                txt: event.target.value\r\n            });\r\n\r\n        }\r\n\r\n        confirm(i){\r\n            this.setState({error:{status:false,msg:\"\"}})\r\n            if(i===0){}\r\n            if(i===1){}\r\n\r\n        }\r\n\r\n\r\n        handleOpen = () => this.setState({ portalopen: true ,pick:{begin:0,end:0},text:\"ข้อความ\" })\r\n        handleClose = () => this.setState({ portalopen: false })\r\n\r\n\r\n        doPost(data){\r\n            var error = 0\r\n\r\n            if((this.state.pick.begin===0&&this.state.pick.end===0 )|| this.state.pick.begin===this.state.pick.end){\r\n                error+=1\r\n                this.setState({error:{status:true,msg:\"Please Select Text\"}});\r\n            }\r\n\r\n           \r\n\r\n            data.mentions.map(mention=>{\r\n                \r\n                if(mention.location.begin === this.state.pick.begin && mention.location.end === this.state.pick.end)\r\n                    {   error+=1\r\n                        this.setState({error:{status:true,msg:\"This Tag already exists!\"}});\r\n                    }\r\n                    return[]\r\n                })\r\n\r\n                if(error===0){\r\n                    var x = document.getElementById('checkmark')\r\n                    x.style.display = 'block'\r\n                    console.log(\"PUT SO NICE\") }\r\n    \r\n            \r\n        \r\n        }\r\n\r\n\r\n        Updatestate(data,i){\r\n            data.mentions.map((lo)=> {\r\n                 console.log(`${lo.text}:${lo.type} ( ${lo.location.begin},${lo.location.end})` )\r\n\r\n\r\n                return \"\";\r\n            }   \r\n            );\r\n\r\n        }\r\n\r\n        textareahandle(){\r\n\r\n                var start = 0\r\n                var end = 0\r\n                var selection = window.getSelection()\r\n                var range = selection.getRangeAt(0)\r\n            \r\n            \r\n                console.log(range.startOffset,range.endOffset,selection.toString())\r\n                start = range.startOffset\r\n                end =  range.endOffset\r\n\r\n                this.setState({\"pick\":{begin:start,end:end},text:selection.toString()})\r\n\r\n            \r\n        }\r\n    \r\n\r\n        tag_select(data){\r\n            this.setState({seltag:data.value})\r\n        }\r\n        checktext(){\r\n            if(this.state.text===\"\"){\r\n                return \"\"\r\n            }\r\n            return this.state.text\r\n        }\r\n        \r\n\r\n\r\n\r\n\r\n         Updatebg(data){\r\n\r\n            var text = data.text;\r\n            var html = [];\r\n            var cut = [];\r\n            var lo_begin = [];\r\n            var lo_end = [];\r\n\r\n                var m = data.mentions.sort((a,b)=>{return a.location.begin - b.location.begin})\r\n                m.map((m,i)=>{\r\n                cut.push(<span key={\"child : \"+i} className={m.type}>{text.slice(m.location.begin,m.location.end)}</span>)\r\n                lo_begin.push(m.location.begin)\r\n                lo_end.push(m.location.end)\r\n                return[]\r\n            })\r\n            \r\n\r\n            for(var i = 0;i<=cut.length;i++){\r\n                if(i===0){\r\n                html.push(<span key={\"normal :\"+i}>{text.slice(0,lo_begin[i])}</span>)\r\n                    html.push(cut[i])\r\n                }\r\n                else{\r\n                    html.push(<span key={\"normal :\"+i}>{text.slice(lo_end[i-1],lo_begin[i])}</span>)\r\n                    html.push(cut[i])\r\n                }\r\n            }\r\n\r\n            return html\r\n\r\n            \r\n\r\n        }\r\n\r\n\r\n\r\n        render() {\r\n\r\n        //Slice Page Number\r\n\r\n            const pageNumber = [],\r\n                indexOfLastPost = this.props.currentpage * this.props.postperpage ,\r\n                indexOfFirstPost = indexOfLastPost - this.props.postperpage,\r\n                currentpost = this.props.posts.slice(indexOfFirstPost,indexOfLastPost);\r\n        \r\n            for(let i =1 ;i<=Math.ceil(this.props.posts.length/this.props.postperpage);i++)\r\n            {pageNumber.push(i);}\r\n\r\n            const { portalopen } = this.state.portalopen\r\n\r\n            const Tags = \r\n            [\r\n                { key: 'A', value: 'Address', text: 'Address' },\r\n                { key: 'Da', value: 'Date', text: 'Date' },\r\n                { key: 'Du', value: 'Duration', text: 'Duration' },\r\n                { key: 'E', value: 'EmailAddress', text: 'EmailAddress' },\r\n                { key: 'F', value: 'Facility', text: 'Facility' },\r\n                { key: 'G', value: 'GeographicFeature', text: 'GeographicFeature' },\r\n                { key: 'H', value: 'Hashtag', text: 'Hashtag' },\r\n                { key: 'J', value: 'JobTitle', text: 'JobTitle' },\r\n                { key: 'L', value: 'Location', text: 'Location' },\r\n                { key: 'I', value: 'IPAddress', text: 'IPAddress' },\r\n                { key: 'Me', value: 'Measure', text: 'Measure' },\r\n                { key: 'Mo', value: 'Money', text: 'Money' },\r\n                { key: 'N', value: 'Number', text: 'Number' },\r\n                { key: 'Ord', value: 'Ordinal', text: 'Ordinal' },\r\n                { key: 'Org', value: 'Organization', text: 'Organization' },\r\n                { key: 'Pers', value: 'Person', text: 'Person' },\r\n                { key: 'Perc', value: 'Percent', text: 'Percent' },\r\n                { key: 'Pro', value: 'Product', text: 'Product' },\r\n                { key: 'Pho', value: 'PhoneNumber', text: 'PhoneNumber' },\r\n                { key: 'Tw', value: 'TwitterHandle', text: 'TwitterHandle' },\r\n                { key: 'Ti', value: 'Time', text: 'Time' },\r\n                { key: 'URL', value: 'URL', text: 'URL' },\r\n                \r\n               \r\n              ]\r\n        // Get Data Total\r\n       \r\n\r\n\r\n                return (  \r\n                <div> \r\n                   \r\n                    { currentpost.map((data ,i) => { \r\n                      return [\r\n                    <div key={\"a\" + data.id} > \r\n                    <div className=\"ui grid\">\r\n                    <div className=\"row\">\r\n                    <div className=\"thirteen wide column\">\r\n\r\n                    <div className=\"ui card\" >\r\n                        <div className=\"content\" >\r\n                            <div className=\"description\"> <p>{this.Updatebg(data)}</p> </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"column\">\r\n\r\n                    <TransitionablePortal\r\n                    \r\n                    onOpen={this.handleOpen}\r\n                    onClose={this.handleClose}\r\n                    openOnTriggerClick\r\n                    trigger={\r\n                    <Button className=\"ui primary button\"\r\n                    key={\"b\"+data.id}\r\n                    onClick={()=>{this.Updatestate(data,i)}}\r\n                    content={portalopen ? 'EDIT' : 'EDIT'}\r\n                    negative={portalopen}\r\n                    positive={!portalopen}\r\n                    />}>\r\n                        \r\n                    <Segment\r\n                    style={{ left: '30%', position: 'fixed', top: '20%', zIndex: 1000 ,width:'40%',height:'67%'}}\r\n                    >\r\n                    <Header>ข้อความรหัสที่ {data.id}</Header>\r\n                    <Grid columns={2} divided style={{marginRight:'5px',marginLeft:'5px'}}>\r\n                    <Grid.Row>\r\n                        <Segment style={{width:\"90%\"}}>  <p onMouseUp={this.textareahandle}>{data.text}</p>   </Segment>\r\n                        <i id=\"checkmark\" className=\"check circle outline icon\" style={{color:'green',fontSize:'150%',marginTop:'3%',marginLeft:'2%',display:'none'}}></i>\r\n                    <p style={{color:'red',marginLeft:'5%'}}>{this.state.error.msg}</p>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                   <Grid.Column>\r\n                <Input placeholder='ข้อความ' value={this.state.text} style={{width:\"100%\"}}  />\r\n                 \r\n                   </Grid.Column>\r\n                   \r\n                   <Grid.Column>\r\n                      <Button disabled={true} >{this.state.pick.begin}</Button>\r\n                    <Button disabled={true} >{this.state.pick.end}</Button>\r\n                   \r\n                </Grid.Column>\r\n                    \r\n            \r\n                    \r\n                    </Grid.Row>\r\n                  \r\n                    \r\n                    <Grid.Row> <Dropdown placeholder='State' fluid search selection options={Tags} style={{MarginTop:'10%'}} onChange={(e,data)=>this.tag_select(data)}/></Grid.Row>\r\n                    <Grid.Row>\r\n                    \r\n                     <Button className =\"ui primary button\" onClick={()=>this.doPost(data)} > POST</Button> \r\n                    <Button className =\"ui yellow button\"> PUT</Button>\r\n                    <Button className =\"ui red button\" > DELETE</Button>\r\n                    </Grid.Row>\r\n                    \r\n                    </Grid>\r\n                    </Segment>\r\n                    </TransitionablePortal>\r\n\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                    ];    \r\n                            })}\r\n\r\n                    <div className=\"mt-30 mb-20\">\r\n                        <Pagination ellipsisItem={null} activePage={this.props.currentpage} totalPages={pageNumber.length} onPageChange={this.props.Changepage}/>\r\n                    </div>\r\n\r\n                   \r\n                    \r\n                </div>\r\n                                    )}}\r\n\r\nexport default Databoard;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport Databoard from'./Databoard';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { Label } from 'semantic-ui-react'\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n\r\n    super(props);\r\n    this.state = {\r\n      txt: \"\",\r\n      posts: [],\r\n      currentpage: 1,\r\n      postperpage: 10,\r\n      datatotal:0,\r\n      tags : {\r\n\r\n        \"Person\":0,\r\n        \"Location\":0,\r\n        \"Organization\":0,\r\n        \"JobTitle\":0,\r\n        \"Facility\":0,\r\n        \"GeographicFeature\":0,\r\n        \"Product\":0,\r\n        \"Date\":0,\r\n        \"Time\":0,\r\n        \"Duration\":0,\r\n        \"Measure\":0,\r\n        \"Money\":0,\r\n        \"Ordinal\":0,\r\n        \"Number\":0,\r\n        \"Percent\":0,\r\n        \"Address\":0,\r\n        \"PhoneNumber\":0,\r\n        \"EmailAddress\":0,\r\n        \"URL\":0,\r\n        \"IPAddress\":0,\r\n        \"Hashtag\":0,\r\n        \"TwitterHandle\":0,\r\n\r\n      },\r\n      \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  };\r\n    this.Changepage = this.Changepage.bind(this);\r\n\r\n    \r\n   \r\n  }\r\n\r\n\r\n\r\n  \r\n    async componentDidMount() {\r\n\r\n   const res = await axios.get('http://localhost:8000/get/');\r\n    this.setState({posts:res.data})\r\n    const list = await axios.get('http://localhost:8000/list/');\r\n    this.setState({tags:{\"Person\":list.data.Person}})\r\n\r\n    \r\n\r\n    \r\n     \r\n}\r\n\r\n\r\ncomponenWillUnmount() {\r\n}\r\n\r\n\r\nChangepage(e,page){\r\n\r\n  this.setState({currentpage:page.activePage});\r\n\r\n}\r\n\r\n\r\n\r\n  render(){\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <div className=\"ui attached tabular menu\"><a href=\"!#\" className=\"active item\">\r\n  <i aria-hidden=\"true\" className=\"users icon\"></i>NER (annotation tool) </a><a href=\"!#\" className=\"item\">Data<div className=\"ui label\">{this.state.posts.length}</div>\r\n          </a>\r\n          <button className=\"ui button\" >Add </button> \r\n          </div>\r\n  <div className=\"ui bottom attached segment active tab color-black\"> <Label color='blue'>Person : {this.state.tags.Person} </Label></div>\r\n          </div>\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\r\n\r\n        <Databoard {...this.state} Changepage = {this.Changepage}/>\r\n\r\n      </header>\r\n    </div>\r\n  )};\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}